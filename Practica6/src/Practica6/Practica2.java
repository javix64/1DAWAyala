/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Practica6;

/**
 *
 * @author x535
 */
public class Practica2 extends javax.swing.JFrame {

    /**
     * Creates new form Practica2
     */
    public Practica2() {
        initComponents();
        elegirMes.add("Enero");
        elegirMes.add("Febrero");
        elegirMes.add("Marzo");
        elegirMes.add("Abril");
        elegirMes.add("Mayo");
        elegirMes.add("Junio");
        elegirMes.add("Julio");
        elegirMes.add("Agosto");
        elegirMes.add("Septiembre");
        elegirMes.add("Octubre");
        elegirMes.add("Noviembre");
        elegirMes.add("Diciembre");
        for (int i = 0; i < 31; i++) {
            /*
                esto empieza en 0 mientras i menor que el dia y la condicion
                de incremento
            */
            elegirDia.add(Integer.toString(i+1));
        }
        int contador=20;
        do{
            System.out.println(contador);
            contador++;
        }while(contador<10);
    }
       public void actualizarScroll() {
       int dia=elegirDia.getSelectedIndex()+1;
       int mes=elegirMes.getSelectedIndex()+1;
       switch(mes) {
           case 1: break;
           case 2: dia+=31; break;
           case 3: dia+=59; break;
           case 4: dia+=90; break;
           case 5: dia+=120; break;
           case 6: dia+=151; break;
           case 7: dia+=181; break;
           case 8: dia+=212; break;
           case 9: dia+=242; break;
           case 10: dia+=273; break;
           case 11: dia+=303; break;
           case 12: dia+=334; break;
       }
       scrollbar.setValue(dia);
       }
       public void actualizaChoiceDia(int mes) {
       int diasMes=0;
       switch(mes) {
           case 1:
           case 3:
           case 5:
           case 7:
           case 8:
           case 10:
           case 12: diasMes=31; break;
           case 4:
           case 6:
           case 9:
           case 11: diasMes=30; break;
           case 2: diasMes=28; break;
       }
        int n=elegirDia.getItemCount();
        if(n>diasMes)
            for(int i=diasMes; i<n; i++)
                elegirDia.remove(diasMes);
        if(n<diasMes)
            for(int i=n+1; i<=diasMes; i++)
              elegirDia.add(""+i);
   }
   public void actualizaChoices() {
        int x=scrollbar.getValue();
        int mes=0, dia=0;
        if(x<=31) {
            mes=1; dia=x;
        } else
            if(x<=59) {
                mes=2; dia=x-31;
            } else
                if(x<=90) {
                    mes=3; dia=x-59;
                } else
                    if(x<=120) {
                        mes=4; dia=x-90;
                    } else
                        if(x<=151) {
                            mes=5; dia=x-120;
                        } else
                            if(x<=181) {
                                mes=6; dia=x-151;
                            } else
                                if(x<=212) {
                                    mes=7; dia=x-181;
                                } else
                                    if(x<=243) {
                                        mes=8; dia=x-212;
                                    } else
                                        if(x<=273) {
                                            mes=9; dia=x-243;
                                        } else
                                            if(x<=304) {
                                                mes=10; dia=x-273;
                                            } else
                                                if(x<=334) {
                                                    mes=11; dia=x-304;
                                                } else {
                                                    mes=12; dia=x-334;
                                                }
        actualizaChoiceDia(mes);
        elegirDia.select(dia-1);
        elegirMes.select(mes-1);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elegirDia = new java.awt.Choice();
        elegirMes = new java.awt.Choice();
        Mes = new java.awt.Label();
        Dia1 = new java.awt.Label();
        scrollbar = new java.awt.Scrollbar();
        button1 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        elegirDia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                elegirDiaItemStateChanged(evt);
            }
        });

        elegirMes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                elegirMesItemStateChanged(evt);
            }
        });

        Mes.setName("Mes"); // NOI18N
        Mes.setText("Mes");

        Dia1.setName("Dia"); // NOI18N
        Dia1.setText("Dia");

        scrollbar.setMaximum(366);
        scrollbar.setOrientation(java.awt.Scrollbar.HORIZONTAL);
        scrollbar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrollbarAdjustmentValueChanged(evt);
            }
        });

        button1.setLabel("Resetear");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Dia1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(elegirDia, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(elegirMes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elegirDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elegirMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103)
                .addComponent(scrollbar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        Mes.getAccessibleContext().setAccessibleName("Dia");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void elegirMesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_elegirMesItemStateChanged
        /*
        si escoges elegirMes
        */
        elegirDia.select(0);
        System.out.println("has cambiado de mes "+elegirMes.getSelectedItem());
        if(elegirMes.getSelectedItem()=="Enero" || 
            elegirMes.getSelectedItem()=="Marzo" || 
            elegirMes.getSelectedItem()=="Mayo" ||
            elegirMes.getSelectedItem()=="Junio" ||
            elegirMes.getSelectedItem()=="Agosto" ||
            elegirMes.getSelectedItem()=="Octubre" ||
            elegirMes.getSelectedItem()=="Diciembre"){
            int diaActual=elegirDia.getSelectedIndex();
            elegirDia.removeAll();
            for (int i = 0; i < 31; i++) {
                elegirDia.add(Integer.toString(i+1));
            }
            elegirDia.select(diaActual);
        }else if(elegirMes.getSelectedItem()=="Febrero"){
            int diaActual=elegirDia.getSelectedIndex();
            elegirDia.removeAll();
            for (int i = 0; i < 29; i++) {
                elegirDia.add(Integer.toString(i+1));
            }
            elegirDia.select(diaActual);
        }else{
            int diaActual=elegirDia.getSelectedIndex();
            elegirDia.removeAll();
            for (int i = 0; i < 30; i++) {
                elegirDia.add(Integer.toString(i+1));
        }
            elegirDia.select(diaActual);

        }
        int dia=elegirDia.getSelectedIndex()+1;
        int mes=elegirMes.getSelectedIndex();
        System.out.println("Dia "+dia+" Mes "+mes+" dia*mes "+ dia*mes);
        scrollbar.setValue(30*mes+dia);
    }//GEN-LAST:event_elegirMesItemStateChanged

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        elegirDia.select("1");
        elegirMes.select("Enero");
        scrollbar.setValue(1);
        actualizaChoices();
    }//GEN-LAST:event_button1ActionPerformed

    private void scrollbarAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scrollbarAdjustmentValueChanged
    actualizaChoices();
    }//GEN-LAST:event_scrollbarAdjustmentValueChanged

    private void elegirDiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_elegirDiaItemStateChanged
        int dia=elegirDia.getSelectedIndex()+1;
        int mes=elegirMes.getSelectedIndex();
        System.out.println("Dia "+dia+" Mes "+mes+" dia*mes "+ dia*mes);
        scrollbar.setValue(30*mes+dia);


    }//GEN-LAST:event_elegirDiaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label Dia1;
    private java.awt.Label Mes;
    private java.awt.Button button1;
    private java.awt.Choice elegirDia;
    private java.awt.Choice elegirMes;
    private java.awt.Scrollbar scrollbar;
    // End of variables declaration//GEN-END:variables
}
